<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    ">


    <!--
        spring中基于xml的AOP配置操作
        1.把通知Bean也交给spring来管理
        2.使用aop:config标签表明开始AOP配置
        3.使用aop:aspect标签表明配置切面
            id属性：是给切面的唯一标识
            ref属性：是指定通知类beanID

        4.在aop:aspect标签内部使用d对应标签来配置通知类型
            我们在示例是让befor方法在切入点方法执行之前执行：所以是前置通知
             aop:before：表示配置前置通知
             method属性： 指定Logger类中那些方法是前置通知
             pointcut属性: 用于指定切入点表达式,该表达式的含义指的是对业务层中那些方法的增强

             切入点表达式写法：
                关键字: execution(表达式)
                表达式:
                   访问修饰符 返回值 包名.包名.. .类名（参数列表）
                 全通配写法:
                    * *..*.*(..)

    -->
    <!--    通知类型-->
<!--    <bean id="logger" class="com.heidan.aop.TestLogger"></bean>-->

   <!-- <aop:config>
        &lt;!&ndash;切入点&ndash;&gt;
        <aop:pointcut id="logs" expression="execution(* com.heidan.dao.*.*(..))"/>
        &lt;!&ndash;织入&ndash;&gt;
        <aop:aspect id="logAdvice" ref="logger">
            &lt;!&ndash;&ndash;&gt;
&lt;!&ndash;            <aop:before method="befor" pointcut-ref="logs"/>&ndash;&gt;
&lt;!&ndash;            <aop:after-returning method="afterReturning" pointcut-ref="logs" returning="result"/>&ndash;&gt;
            <aop:around method="around" pointcut-ref="logs"></aop:around>
        </aop:aspect>
    </aop:config>
-->
    <!--此标签用于扫描当前包下的注解，来实现bean的自动载入-->
    <context:component-scan base-package="com.heidan.dao,com.heidan.aop,com.heidan.service"/>

    <!--此标签开启AOP注解-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>